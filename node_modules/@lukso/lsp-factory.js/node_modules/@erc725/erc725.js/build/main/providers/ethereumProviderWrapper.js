"use strict";
/*
    This file is part of @erc725/erc725.js.
    @erc725/erc725.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    @erc725/erc725.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.
    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file providers/ethereumProviderWrapper.ts
 * @author Robert McLeod <@robertdavid010>, Fabian Vogelsteller <fabian@lukso.network>
 * @date 2020
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthereumProviderWrapper = void 0;
/*
  This file will handle querying the Ethereum provider api in accordance with
  implementation of smart contract interfaces of ERC725
*/
const abi = __importStar(require("web3-eth-abi"));
const constants_1 = require("../lib/constants");
const Method_1 = require("../types/Method");
// @ts-ignore
const web3Abi = abi.default;
class EthereumProviderWrapper {
    constructor(provider) {
        this.type = "ETHEREUM" /* ETHEREUM */;
        this.provider = provider;
    }
    async getOwner(address) {
        const params = this.constructJSONRPC(address, Method_1.Method.OWNER);
        const result = await this.callContract([params]);
        if (result.error) {
            throw result.error;
        }
        return this.decodeResult(Method_1.Method.OWNER, result);
    }
    async getData(address, keyHash) {
        const result = await this.callContract([
            this.constructJSONRPC(address, Method_1.Method.GET_DATA, keyHash),
        ]);
        return this.decodeResult(Method_1.Method.GET_DATA, result);
    }
    async getAllData(address, keys) {
        const results = [];
        for (let index = 0; index < keys.length; index++) {
            results.push({
                key: keys[index],
                value: await this.getData(address, keys[index]),
            });
        }
        return results;
    }
    // eslint-disable-next-line class-methods-use-this
    constructJSONRPC(address, method, methodParam) {
        const data = methodParam
            ? constants_1.METHODS[method].sig + methodParam.replace('0x', '')
            : constants_1.METHODS[method].sig;
        return {
            to: address,
            gas: constants_1.METHODS[method].gas,
            gasPrice: constants_1.METHODS[method].gasPrice,
            value: constants_1.METHODS[method].value,
            data,
        };
    }
    async callContract(params) {
        return this.provider.request({ method: 'eth_call', params });
    }
    // eslint-disable-next-line class-methods-use-this
    decodeResult(method, result) {
        return result === '0x'
            ? null
            : web3Abi.decodeParameter(constants_1.METHODS[method].returnEncoding, result);
    }
}
exports.EthereumProviderWrapper = EthereumProviderWrapper;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoZXJldW1Qcm92aWRlcldyYXBwZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2V0aGVyZXVtUHJvdmlkZXJXcmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7O0VBWUU7QUFDRjs7OztHQUlHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUg7OztFQUdFO0FBRUYsa0RBQW9DO0FBRXBDLGdEQUEyQztBQUMzQyw0Q0FBeUM7QUFHekMsYUFBYTtBQUNiLE1BQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7QUFFNUIsTUFBYSx1QkFBdUI7SUFHbEMsWUFBWSxRQUFhO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLDRCQUF5QixDQUFDO1FBQ25DLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzNCLENBQUM7SUFFRCxLQUFLLENBQUMsUUFBUSxDQUFDLE9BQWU7UUFDNUIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxlQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUQsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNqRCxJQUFJLE1BQU0sQ0FBQyxLQUFLLEVBQUU7WUFDaEIsTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ3BCO1FBRUQsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBZSxFQUFFLE9BQWU7UUFDNUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsZUFBTSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUM7U0FDekQsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQU0sQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELEtBQUssQ0FBQyxVQUFVLENBQUMsT0FBZSxFQUFFLElBQWM7UUFDOUMsTUFBTSxPQUFPLEdBR1AsRUFBRSxDQUFDO1FBRVQsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDaEQsT0FBTyxDQUFDLElBQUksQ0FBQztnQkFDWCxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDaEIsS0FBSyxFQUFFLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2hELENBQUMsQ0FBQztTQUNKO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUVELGtEQUFrRDtJQUMxQyxnQkFBZ0IsQ0FDdEIsT0FBZSxFQUNmLE1BQWMsRUFDZCxXQUFvQjtRQUVwQixNQUFNLElBQUksR0FBRyxXQUFXO1lBQ3RCLENBQUMsQ0FBQyxtQkFBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUM7WUFDckQsQ0FBQyxDQUFDLG1CQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDO1FBRXhCLE9BQU87WUFDTCxFQUFFLEVBQUUsT0FBTztZQUNYLEdBQUcsRUFBRSxtQkFBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUc7WUFDeEIsUUFBUSxFQUFFLG1CQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBUTtZQUNsQyxLQUFLLEVBQUUsbUJBQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLO1lBQzVCLElBQUk7U0FDTCxDQUFDO0lBQ0osQ0FBQztJQUVPLEtBQUssQ0FBQyxZQUFZLENBQUMsTUFBVztRQUNwQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxrREFBa0Q7SUFDMUMsWUFBWSxDQUFDLE1BQWMsRUFBRSxNQUFjO1FBQ2pELE9BQU8sTUFBTSxLQUFLLElBQUk7WUFDcEIsQ0FBQyxDQUFDLElBQUk7WUFDTixDQUFDLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxtQkFBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN0RSxDQUFDO0NBQ0Y7QUF0RUQsMERBc0VDIn0=