import { NonceManager } from '@ethersproject/experimental';
import { LSPFactoryOptions } from '../interfaces';
import { ContractDeploymentOptions, DeployedContracts, DigitalAssetDeploymentOptions, LSP7DigitalAssetDeploymentOptions } from '../interfaces/digital-asset-deployment';
export declare class DigitalAsset {
    options: LSPFactoryOptions;
    signer: NonceManager;
    constructor(options: LSPFactoryOptions);
    deployLSP7DigitalAssetReactive(digitalAssetDeploymentOptions: LSP7DigitalAssetDeploymentOptions, contractDeploymentOptions?: ContractDeploymentOptions): import("rxjs").Observable<import("../services/digital-asset.service").DigitalAssetDeploymentEvent>;
    deployLSP7DigitalAsset(digitalAssetDeploymentOptions: LSP7DigitalAssetDeploymentOptions, contractDeploymentOptions?: ContractDeploymentOptions): Promise<DeployedContracts>;
    deployLSP8IdentifiableDigitalAssetReactive(digitalAssetDeploymentOptions: DigitalAssetDeploymentOptions, contractDeploymentOptions?: ContractDeploymentOptions): import("rxjs").Observable<import("../services/digital-asset.service").DigitalAssetDeploymentEvent>;
    deployLSP8IdentifiableDigitalAsset(digitalAssetDeploymentOptions: DigitalAssetDeploymentOptions, ContractDeploymentOptions?: ContractDeploymentOptions): Promise<DeployedContracts>;
    deployBaseContracts(): Promise<DeployedContracts>;
}
