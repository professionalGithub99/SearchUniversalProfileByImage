import { NonceManager } from '@ethersproject/experimental';
import { LSPFactoryOptions, ProfileDataBeforeUpload, ProfileDeploymentOptions } from '../interfaces';
import { LSP3ProfileDataForEncoding } from '../interfaces/lsp3-profile';
import { ContractDeploymentOptions, DeployedContracts } from '../interfaces/profile-deployment';
import { ProfileUploadOptions } from '../interfaces/profile-upload-options';
/**
 * TODO: docs
 */
export declare class LSP3UniversalProfile {
    options: LSPFactoryOptions;
    signer: NonceManager;
    constructor(options: LSPFactoryOptions);
    /**
     * TODO: docs
     */
    deployReactive(profileDeploymentOptions: ProfileDeploymentOptions, contractDeploymentOptions?: ContractDeploymentOptions): import("rxjs").Observable<import("../interfaces").DeploymentEventStandardContract | import("../interfaces").DeploymentEventProxyContract | import("../interfaces").DeploymentEventTransaction>;
    /**
     * TODO: docs
     */
    deploy(profileDeploymentOptions: ProfileDeploymentOptions, contractDeploymentOptions?: ContractDeploymentOptions): Promise<DeployedContracts>;
    getDeployedByteCode(contractAddress: string): Promise<string>;
    deployBaseContracts(): Promise<DeployedContracts>;
    /**
     * Pre-deploys the latest Version of the LSP3UniversalProfile smart-contracts.
     *
     * @param {'string'} [version] Instead of deploying the latest Version you can also deploy a specific
     *  version of the smart-contracts. A list of all available version is available here.
     */
    preDeployContracts(version?: 'string'): Promise<void>;
    /**
     * Uploads the LSP3Profile to the desired endpoint. This can be an `https` URL either pointing to
     * a public, centralized storage endpoint or an IPFS Node / Cluster
     *
     * @param {ProfileDataBeforeUpload} profileData
     * @return {*}  {(Promise<AddResult | string>)}
     * @memberof LSP3UniversalProfile
     */
    static uploadProfileData(profileData: ProfileDataBeforeUpload, uploadOptions?: ProfileUploadOptions): Promise<LSP3ProfileDataForEncoding>;
}
