"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DigitalAsset = void 0;
const experimental_1 = require("@ethersproject/experimental");
const rxjs_1 = require("rxjs");
const versions_json_1 = __importDefault(require("../../versions.json"));
const config_helper_1 = require("../helpers/config.helper");
const base_contract_service_1 = require("../services/base-contract.service");
const digital_asset_service_1 = require("../services/digital-asset.service");
class DigitalAsset {
    constructor(options) {
        this.options = options;
        this.signer = new experimental_1.NonceManager(options.signer);
    }
    // LSP7
    deployLSP7DigitalAssetReactive(digitalAssetDeploymentOptions, contractDeploymentOptions) {
        var _a, _b, _c;
        const digitalAsset$ = (0, digital_asset_service_1.lsp7DigitalAssetDeployment$)(this.signer, digitalAssetDeploymentOptions, (_a = contractDeploymentOptions === null || contractDeploymentOptions === void 0 ? void 0 : contractDeploymentOptions.libAddress) !== null && _a !== void 0 ? _a : (_c = (_b = versions_json_1.default[this.options.chainId]) === null || _b === void 0 ? void 0 : _b.baseContracts) === null || _c === void 0 ? void 0 : _c.LSP7DigitalAsset[config_helper_1.DEFAULT_CONTRACT_VERSION]);
        return digitalAsset$;
    }
    deployLSP7DigitalAsset(digitalAssetDeploymentOptions, contractDeploymentOptions) {
        const deployments$ = this.deployLSP7DigitalAssetReactive(digitalAssetDeploymentOptions, contractDeploymentOptions).pipe((0, rxjs_1.scan)((accumulator, deploymentEvent) => {
            if (deploymentEvent.receipt && deploymentEvent.receipt.contractAddress) {
                accumulator[deploymentEvent.contractName] = {
                    address: deploymentEvent.receipt.contractAddress,
                    receipt: deploymentEvent.receipt,
                };
            }
            return accumulator;
        }, {}));
        return (0, rxjs_1.lastValueFrom)(deployments$);
    }
    // LSP8
    deployLSP8IdentifiableDigitalAssetReactive(digitalAssetDeploymentOptions, contractDeploymentOptions) {
        var _a, _b, _c;
        const digitalAsset$ = (0, digital_asset_service_1.lsp8IdentifiableDigitalAssetDeployment$)(this.signer, digitalAssetDeploymentOptions, (_a = contractDeploymentOptions === null || contractDeploymentOptions === void 0 ? void 0 : contractDeploymentOptions.libAddress) !== null && _a !== void 0 ? _a : (_c = (_b = versions_json_1.default[this.options.chainId]) === null || _b === void 0 ? void 0 : _b.baseContracts) === null || _c === void 0 ? void 0 : _c.LSP8IdentifiableDigitalAsset[config_helper_1.DEFAULT_CONTRACT_VERSION]);
        return digitalAsset$;
    }
    deployLSP8IdentifiableDigitalAsset(digitalAssetDeploymentOptions, ContractDeploymentOptions) {
        const deployments$ = this.deployLSP8IdentifiableDigitalAssetReactive(digitalAssetDeploymentOptions, ContractDeploymentOptions).pipe((0, rxjs_1.scan)((accumulator, deploymentEvent) => {
            if (deploymentEvent.receipt && deploymentEvent.receipt.contractAddress) {
                accumulator[deploymentEvent.contractName] = {
                    address: deploymentEvent.receipt.contractAddress,
                    receipt: deploymentEvent.receipt,
                };
            }
            return accumulator;
        }, {}));
        return (0, rxjs_1.lastValueFrom)(deployments$);
    }
    deployBaseContracts() {
        const baseContractsToDeploy$ = (0, rxjs_1.of)([true, true]);
        const baseContracts$ = (0, base_contract_service_1.digitalAssetBaseContractsDeployment$)(this.signer, baseContractsToDeploy$);
        const deployments$ = baseContracts$.pipe((0, rxjs_1.scan)((accumulator, deploymentEvent) => {
            if (deploymentEvent.receipt && deploymentEvent.receipt.contractAddress) {
                accumulator[deploymentEvent.contractName] = {
                    address: deploymentEvent.receipt.contractAddress,
                    receipt: deploymentEvent.receipt,
                };
            }
            return accumulator;
        }, {}));
        return (0, rxjs_1.lastValueFrom)(deployments$);
    }
}
exports.DigitalAsset = DigitalAsset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlnaXRhbC1hc3NldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY2xhc3Nlcy9kaWdpdGFsLWFzc2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDhEQUEyRDtBQUMzRCwrQkFBK0M7QUFFL0Msd0VBQTJDO0FBQzNDLDREQUFvRTtBQVFwRSw2RUFBeUY7QUFDekYsNkVBRzJDO0FBRTNDLE1BQWEsWUFBWTtJQUd2QixZQUFZLE9BQTBCO1FBQ3BDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSwyQkFBWSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQsT0FBTztJQUVQLDhCQUE4QixDQUM1Qiw2QkFBZ0UsRUFDaEUseUJBQXFEOztRQUVyRCxNQUFNLGFBQWEsR0FBRyxJQUFBLG1EQUEyQixFQUMvQyxJQUFJLENBQUMsTUFBTSxFQUNYLDZCQUE2QixFQUM3QixNQUFBLHlCQUF5QixhQUF6Qix5QkFBeUIsdUJBQXpCLHlCQUF5QixDQUFFLFVBQVUsbUNBQ25DLE1BQUEsTUFBQSx1QkFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLDBDQUFFLGFBQWEsMENBQUUsZ0JBQWdCLENBQUMsd0NBQXdCLENBQUMsQ0FDNUYsQ0FBQztRQUNGLE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxzQkFBc0IsQ0FDcEIsNkJBQWdFLEVBQ2hFLHlCQUFxRDtRQUVyRCxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsOEJBQThCLENBQ3RELDZCQUE2QixFQUM3Qix5QkFBeUIsQ0FDMUIsQ0FBQyxJQUFJLENBQ0osSUFBQSxXQUFJLEVBQUMsQ0FBQyxXQUE4QixFQUFFLGVBQWdDLEVBQUUsRUFBRTtZQUN4RSxJQUFJLGVBQWUsQ0FBQyxPQUFPLElBQUksZUFBZSxDQUFDLE9BQU8sQ0FB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