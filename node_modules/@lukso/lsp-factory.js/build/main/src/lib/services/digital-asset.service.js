"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lsp8IdentifiableDigitalAssetDeployment$ = exports.lsp7DigitalAssetDeployment$ = void 0;
const rxjs_1 = require("rxjs");
const __1 = require("../../");
const deployment_helper_1 = require("../helpers/deployment.helper");
const digital_asset_deployment_1 = require("../interfaces/digital-asset-deployment");
// LSP7
function lsp7DigitalAssetDeployment$(signer, digitalAssetDeploymentOptions, baseContractAddress) {
    const lsp7Deployment$ = (0, rxjs_1.from)(deployLSP7DigitalAsset(signer, digitalAssetDeploymentOptions, baseContractAddress)).pipe((0, rxjs_1.shareReplay)());
    const lsp7DeploymentReceipt$ = (0, deployment_helper_1.waitForReceipt)(lsp7Deployment$).pipe((0, rxjs_1.shareReplay)());
    const lsp7Initialize$ = baseContractAddress
        ? initializeLSP7Proxy(signer, lsp7DeploymentReceipt$, digitalAssetDeploymentOptions)
        : rxjs_1.EMPTY;
    const lsp7InitializeReceipt$ = (0, deployment_helper_1.waitForReceipt)(lsp7Initialize$).pipe((0, rxjs_1.shareReplay)());
    return (0, rxjs_1.concat)(lsp7Deployment$, lsp7DeploymentReceipt$, lsp7Initialize$, lsp7InitializeReceipt$);
}
exports.lsp7DigitalAssetDeployment$ = lsp7DigitalAssetDeployment$;
async function deployLSP7DigitalAsset(signer, digitalAssetDeploymentOptions, baseContractAddress) {
    const deploymentFunction = async () => {
        return baseContractAddress
            ? new __1.LSP7DigitalAssetInit__factory(signer).attach(baseContractAddress)
            : await new __1.LSP7DigitalAsset__factory(signer).deploy(digitalAssetDeploymentOptions.name, digitalAssetDeploymentOptions.symbol, digitalAssetDeploymentOptions.ownerAddress, digitalAssetDeploymentOptions.isNFT);
    };
    return baseContractAddress
        ? (0, deployment_helper_1.deployProxyContract)(__1.LSP7DigitalAssetInit__factory.abi, deploymentFunction, digital_asset_deployment_1.ContractNames.LSP7_DIGITAL_ASSET, signer)
        : (0, deployment_helper_1.deployContract)(deploymentFunction, digital_asset_deployment_1.ContractNames.LSP7_DIGITAL_ASSET);
}
function initializeLSP7Proxy(signer, digitalAssetDeploymentReceipt$, digitalAssetDeploymentOptions) {
    const { name, symbol, ownerAddress, isNFT } = digitalAssetDeploymentOptions;
    const initialize$ = digitalAssetDeploymentReceipt$.pipe((0, rxjs_1.takeLast)(1), (0, rxjs_1.switchMap)(async (result) => {
        const contract = await new __1.LSP7DigitalAssetInit__factory(signer).attach(result.receipt.contractAddress);
        const transaction = await contract[`initialize(string,string,address,bool)`](name, symbol, ownerAddress, isNFT, {
            gasLimit: 3000000,
        });
        return {
            type: result.type,
            contractName: result.contractName,
            functionName: 'initialize',
            status: result.status,
            transaction,
        };
    }), (0, rxjs_1.shareReplay)());
    return initialize$;
}
// LSP8
function lsp8IdentifiableDigitalAssetDeployment$(signer, digitalAssetDeploymentOptions, baseContractAddress) {
    const lsp8Deployment$ = (0, rxjs_1.from)(deployLSP8IdentifiableDigitalAsset(signer, digitalAssetDeploymentOptions, baseContractAddress)).pipe((0, rxjs_1.shareReplay)());
    const lsp8DeploymentReceipt$ = (0, deployment_helper_1.waitForReceipt)(lsp8Deployment$);
    const lsp8Initialize$ = baseContractAddress
        ? initializeLSP8Proxy(signer, lsp8DeploymentReceipt$, digitalAssetDeploymentOptions)
        : rxjs_1.EMPTY;
    const lsp8InitializeReceipt$ = (0, deployment_helper_1.waitForReceipt)(lsp8Initialize$).pipe((0, rxjs_1.shareReplay)());
    return (0, rxjs_1.concat)(lsp8Deployment$, lsp8DeploymentReceipt$, lsp8Initialize$, lsp8InitializeReceipt$);
}
exports.lsp8IdentifiableDigitalAssetDeployment$ = lsp8IdentifiableDigitalAssetDeployment$;
async function deployLSP8IdentifiableDigitalAsset(signer, digitalAssetDeploymentOptions, baseContractAddress) {
    const deploymentFunction = async () => {
        return baseContractAddress
            ? new __1.LSP8IdentifiableDigitalAssetInit__factory(signer).attach(baseContractAddress)
            : await new __1.LSP8IdentifiableDigitalAsset__factory(signer).deploy(digitalAssetDeploymentOptions.name, digitalAssetDeploymentOptions.symbol, digitalAssetDeploymentOptions.ownerAddress);
    };
    return baseContractAddress
        ? (0, deployment_helper_1.deployProxyContract)(__1.LSP8IdentifiableDigitalAssetInit__factory.abi, deploymentFunction, digital_asset_deployment_1.ContractNames.LSP8_DIGITAL_ASSET, signer)
        : (0, deployment_helper_1.deployContract)(deploymentFunction, digital_asset_deployment_1.ContractNames.LSP8_DIGITAL_ASSET);
}
function initializeLSP8Proxy(signer, digitalAssetDeploymentReceipt$, digitalAssetDeploymentOptions) {
    const { name, symbol, ownerAddress } = digitalAssetDeploymentOptions;
    const initialize$ = digitalAssetDeploymentReceipt$.pipe((0, rxjs_1.takeLast)(1), (0, rxjs_1.switchMap)(async (result) => {
        const contract = await new __1.LSP7DigitalAssetInit__factory(signer).attach(result.receipt.contractAddress);
        const transaction = await contract[`initialize(string,string,address)`](name, symbol, ownerAddress, {
            gasLimit: 3000000,
        });
        return {
            type: result.type,
            contractName: result.contractName,
            functionName: 'initialize',
            status: result.status,
            transaction,
        };
    }), (0, rxjs_1.shareReplay)());
    return initialize$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlnaXRhbC1hc3NldC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9zZXJ2aWNlcy9kaWdpdGFsLWFzc2V0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsK0JBQXlGO0FBRXpGLDhCQUtnQjtBQUNoQixvRUFBbUc7QUFFbkcscUZBSWdEO0FBSWhELE9BQU87QUFFUCxTQUFnQiwyQkFBMkIsQ0FDekMsTUFBYyxFQUNkLDZCQUFnRSxFQUNoRSxtQkFBNEI7SUFFNUIsTUFBTSxlQUFlLEdBQUcsSUFBQSxXQUFJLEVBQzFCLHNCQUFzQixDQUFDLE1BQU0sRUFBRSw2QkFBNkIsRUFBRSxtQkFBbUIsQ0FBQyxDQUNuRixDQUFDLElBQUksQ0FBQyxJQUFBLGtCQUFXLEdBQUUsQ0FBQyxDQUFDO0lBRXRCLE1BQU0sc0JBQXNCLEdBQUcsSUFBQSxrQ0FBYyxFQUE4QixlQUFlLENBQUMsQ0FBQyxJQUFJLENBQzlGLElBQUEsa0JBQVcsR0FBRSxDQUNkLENBQUM7SUFFRixNQUFNLGVBQWUsR0FBRyxtQkFBbUI7UUFDekMsQ0FBQyxDQUFDLG1CQUFtQixDQUNqQixNQUFNLEVBQ04sc0JBQWtFLEVBQ2xFLDZCQUE2QixDQUM5QjtRQUNILENBQUMsQ0FBQyxZQUFLLENBQUM7SUFFVixNQUFNLHNCQUFzQixHQUFHLElBQUEsa0NBQWMsRUFBOEIsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUM5RixJQUFBLGtCQUFXLEdBQUUsQ0FDZCxDQUFDO0lBRUYsT0FBTyxJQUFBLGFBQU0sRUFBQyxlQUFlLEVBQUUsc0JBQXNCLEVBQUUsZUFBZSxFQUFFLHNCQUFzQixDQUFDLENBQUM7QUFDbEcsQ0FBQztBQTFCRCxrRUEwQkM7QUFFRCxLQUFLLFVBQVUsc0JBQXNCLENBQ25DLE1BQWMsRUFDZCw2QkFBZ0UsRUFDaEUsbUJBQTRCO0lBRTVCLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxJQUFJLEVBQUU7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