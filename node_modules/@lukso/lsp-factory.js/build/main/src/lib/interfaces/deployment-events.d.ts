import { TransactionReceipt } from '@ethersproject/abstract-provider';
import { ContractTransaction } from 'ethers';
import { Observable } from 'rxjs';
export declare enum DeploymentType {
    CONTRACT = "CONTRACT",
    TRANSACTION = "TRANSACTION",
    PROXY = "PROXY",
    BASE_CONTRACT = "BASE_CONTRACT"
}
export declare enum DeploymentStatus {
    PENDING = "PENDING",
    COMPLETE = "COMPLETE"
}
export interface DeploymentEventBase {
    type: DeploymentType;
    status: DeploymentStatus;
    contractName: string;
    transaction?: ContractTransaction;
    receipt?: TransactionReceipt;
}
export interface DeploymentEventStandardContract extends DeploymentEventBase {
    type: DeploymentType.CONTRACT;
}
export interface DeploymentEventBaseContract extends DeploymentEventBase {
    type: DeploymentType.BASE_CONTRACT;
}
export interface DeploymentEventProxyContract extends DeploymentEventBase {
    type: DeploymentType.PROXY;
    functionName?: string;
}
export declare type DeploymentEventContract = DeploymentEventStandardContract | DeploymentEventProxyContract;
export interface DeploymentEventTransaction extends DeploymentEventBase {
    type: DeploymentType.TRANSACTION;
    functionName: string;
    transaction: ContractTransaction;
}
export declare type DeploymentEvent = DeploymentEventStandardContract | DeploymentEventProxyContract | DeploymentEventTransaction;
export declare type DeploymentEvent$ = Observable<DeploymentEvent>;
