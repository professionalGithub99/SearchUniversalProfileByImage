/* eslint-disable @typescript-eslint/ban-types */
import { numberToHex, keccak256 } from 'web3-utils';
import { Encoding, Method } from '../types/Method';
// https://github.com/ERC725Alliance/ERC725/blob/develop/docs/ERC-725.md#specification
export const INTERFACE_IDS = {
    ERC725Y_LEGACY: '0x2bd57b73',
    ERC725Y: '0x5a988c0f',
};
export var ERC725_VERSION;
(function (ERC725_VERSION) {
    ERC725_VERSION["ERC725"] = "ERC725";
    ERC725_VERSION["ERC725_LEGACY"] = "ERC725_LEGACY";
    ERC725_VERSION["NOT_ERC725"] = "NOT_ERC725";
})(ERC725_VERSION || (ERC725_VERSION = {}));
export const METHODS = {
    [Method.GET_DATA_LEGACY]: {
        sig: '0x54f6127f',
        gas: numberToHex(2000000),
        gasPrice: numberToHex(100000000),
        value: numberToHex(0),
        returnEncoding: Encoding.BYTES,
    },
    [Method.GET_DATA]: {
        sig: '0x4e3e6e9c',
        gas: numberToHex(2000000),
        gasPrice: numberToHex(100000000),
        value: numberToHex(0),
        returnEncoding: Encoding.BYTES_ARRAY,
    },
    [Method.DATA_COUNT]: {
        sig: '0x5da40c47',
        gas: numberToHex(2000000),
        gasPrice: numberToHex(100000000),
        value: numberToHex(0),
        returnEncoding: Encoding.UINT256,
    },
    [Method.ALL_DATA]: {
        sig: '0xc559acef',
        gas: numberToHex(2000000),
        gasPrice: numberToHex(100000000),
        value: numberToHex(0),
        returnEncoding: Encoding.BYTES32_ARRAY,
    },
    [Method.OWNER]: {
        sig: '0x8da5cb5b',
        gas: numberToHex(2000000),
        gasPrice: numberToHex(100000000),
        value: numberToHex(0),
        returnEncoding: Encoding.ADDRESS,
    },
    [Method.SUPPORTS_INTERFACE]: {
        sig: '0x01ffc9a7',
        gas: numberToHex(2000000),
        gasPrice: numberToHex(100000000),
        value: numberToHex(0),
        returnEncoding: Encoding.BOOL,
    },
};
export var SUPPORTED_HASH_FUNCTION_STRINGS;
(function (SUPPORTED_HASH_FUNCTION_STRINGS) {
    SUPPORTED_HASH_FUNCTION_STRINGS["KECCAK256_UTF8"] = "keccak256(utf8)";
    SUPPORTED_HASH_FUNCTION_STRINGS["KECCAK256_BYTES"] = "keccak256(bytes)";
})(SUPPORTED_HASH_FUNCTION_STRINGS || (SUPPORTED_HASH_FUNCTION_STRINGS = {}));
export var SUPPORTED_HASH_FUNCTION_HASHES;
(function (SUPPORTED_HASH_FUNCTION_HASHES) {
    SUPPORTED_HASH_FUNCTION_HASHES["HASH_KECCAK256_UTF8"] = "0x6f357c6a";
    SUPPORTED_HASH_FUNCTION_HASHES["HASH_KECCAK256_BYTES"] = "0x8019f9b1";
})(SUPPORTED_HASH_FUNCTION_HASHES || (SUPPORTED_HASH_FUNCTION_HASHES = {}));
export const SUPPORTED_HASH_FUNCTIONS_LIST = Object.values(SUPPORTED_HASH_FUNCTION_STRINGS);
function keccak256Utf8(data) {
    return keccak256(JSON.stringify(data));
}
const KECCAK256_UTF8 = {
    method: keccak256Utf8,
    name: SUPPORTED_HASH_FUNCTION_STRINGS.KECCAK256_UTF8,
    sig: SUPPORTED_HASH_FUNCTION_HASHES.HASH_KECCAK256_UTF8,
};
const KECCAK256_BYTES = {
    method: keccak256,
    name: SUPPORTED_HASH_FUNCTION_STRINGS.KECCAK256_BYTES,
    sig: SUPPORTED_HASH_FUNCTION_HASHES.HASH_KECCAK256_BYTES,
};
export const HASH_FUNCTIONS = {
    [SUPPORTED_HASH_FUNCTION_STRINGS.KECCAK256_UTF8]: KECCAK256_UTF8,
    [SUPPORTED_HASH_FUNCTION_HASHES.HASH_KECCAK256_UTF8]: KECCAK256_UTF8,
    [SUPPORTED_HASH_FUNCTION_STRINGS.KECCAK256_BYTES]: KECCAK256_BYTES,
    [SUPPORTED_HASH_FUNCTION_HASHES.HASH_KECCAK256_BYTES]: KECCAK256_BYTES,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaURBQWlEO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXBELE9BQU8sRUFBYyxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0Qsc0ZBQXNGO0FBQ3RGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRztJQUMzQixjQUFjLEVBQUUsWUFBWTtJQUM1QixPQUFPLEVBQUUsWUFBWTtDQUN0QixDQUFDO0FBRUYsTUFBTSxDQUFOLElBQVksY0FJWDtBQUpELFdBQVksY0FBYztJQUN4QixtQ0FBaUIsQ0FBQTtJQUNqQixpREFBK0IsQ0FBQTtJQUMvQiwyQ0FBeUIsQ0FBQTtBQUMzQixDQUFDLEVBSlcsY0FBYyxLQUFkLGNBQWMsUUFJekI7QUFFRCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQStCO0lBQ2pELENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxFQUFFO1FBQ3hCLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLEdBQUcsRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3pCLFFBQVEsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDO1FBQ2hDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLGNBQWMsRUFBRSxRQUFRLENBQUMsS0FBSztLQUMvQjtJQUNELENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2pCLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLEdBQUcsRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3pCLFFBQVEsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDO1FBQ2hDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLGNBQWMsRUFBRSxRQUFRLENBQUMsV0FBVztLQUNyQztJQUNELENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1FBQ25CLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLEdBQUcsRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3pCLFFBQVEsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDO1FBQ2hDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLGNBQWMsRUFBRSxRQUFRLENBQUMsT0FBTztLQUNqQztJQUNELENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2pCLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLEdBQUcsRUFBRSxXQUFXLENBQUMsT0FBTyxDQUFDO1FBQ3pCLFFBQVEsRUFBRSxXQUFXLENBQUMsU0FBUyxDQUFDO1FBQ2hDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3JCLGNBQWMsRUFBRSxRQUFRLENBQUMsYUFBYTtLQUN2QztJQUNELENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2QsR0FBRyxFQUFFLFlBQVk7UUFDakIsR0FBRyxFQUFFLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFDekIsUUFBUSxFQUFFLFdBQVcsQ0FBQyxTQUFTLENBQUM7UUFDaEMsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDckIsY0FBYyxFQUFFLFFBQVEsQ0FBQyxPQUFPO0tBQ2pDO0lBQ0QsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsRUFBRTtRQUMzQixHQUFHLEVBQUUsWUFBWTtRQUNqQixHQUFHLEVBQUUsV0FBVyxDQUFDLE9BQU8sQ0FBQztRQUN6QixRQUFRLEVBQUUsV0FBVyxDQUFDLFNBQVMsQ0FBQztRQUNoQyxLQUFLLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUNyQixjQUFjLEVBQUUsUUFBUSxDQUFDLElBQUk7S0FDOUI7Q0FDRixDQUFDO0FBRUYsTUFBTSxDQUFOLElBQVksK0JBR1g7QUFIRCxXQUFZLCtCQUErQjtJQUN6QyxxRUFBa0MsQ0FBQTtJQUNsQyx1RUFBb0MsQ0FBQTtBQUN0QyxDQUFDLEVBSFcsK0JBQStCLEtBQS9CLCtCQUErQixRQUcxQztBQUVELE1BQU0sQ0FBTixJQUFZLDhCQUdYO0FBSEQsV0FBWSw4QkFBOEI7SUFDeEMsb0VBQWtDLENBQUE7SUFDbEMscUVBQW1DLENBQUE7QUFDckMsQ0FBQyxFQUhXLDhCQUE4QixLQUE5Qiw4QkFBOEIsUUFHekM7QUFNRCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUN4RCwrQkFBK0IsQ0FDaEMsQ0FBQztBQUVGLFNBQVMsYUFBYSxDQUFDLElBQUk7SUFDekIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFFRCxNQUFNLGNBQWMsR0FBRztJQUNyQixNQUFNLEVBQUUsYUFBYTtJQUNyQixJQUFJLEVBQUUsK0JBQStCLENBQUMsY0FBYztJQUNwRCxHQUFHLEVBQUUsOEJBQThCLENBQUMsbUJBQW1CO0NBQ3hELENBQUM7QUFFRixNQUFNLGVBQWUsR0FBRztJQUN0QixNQUFNLEVBQUUsU0FBUztJQUNqQixJQUFJLEVBQUUsK0JBQStCLENBQUMsZUFBZTtJQUNyRCxHQUFHLEVBQUUsOEJBQThCLENBQUMsb0JBQW9CO0NBQ3pELENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBTXZCO0lBQ0YsQ0FBQywrQkFBK0IsQ0FBQyxjQUFjLENBQUMsRUFBRSxjQUFjO0lBQ2hFLENBQUMsOEJBQThCLENBQUMsbUJBQW1CLENBQUMsRUFBRSxjQUFjO0lBQ3BFLENBQUMsK0JBQStCLENBQUMsZUFBZSxDQUFDLEVBQUUsZUFBZTtJQUNsRSxDQUFDLDhCQUE4QixDQUFDLG9CQUFvQixDQUFDLEVBQUUsZUFBZTtDQUN2RSxDQUFDIn0=