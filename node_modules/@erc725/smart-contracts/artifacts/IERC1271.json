{
  "contractName": "IERC1271",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"_hash\":\"hash of the data signed//Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"either 0x1626ba7e on success or 0xffffffff failure\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ERC-1271: Standard Signature Validation Method for Contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x23f6fedfcd281bee24dda37624cb8759e2f2dde4126261b1167dc96fd15fd1a6\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://b41539a7fb5300bc03666cdefb8a17b449b1e3a8885bee9ed1aea5c5bc67e696\",\"dweb:/ipfs/QmeirK4VYk84ndHtWnXaT6iYFSmYpEdmJGKuwwdxDSdz6f\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n/**\n * @notice ERC-1271: Standard Signature Validation Method for Contracts\n */\ninterface IERC1271 {\n\n//    bytes4 internal constant _ERC1271MAGICVALUE = 0x1626ba7e;\n//    bytes4 internal constant _ERC1271FAILVALUE = 0xffffffff;\n\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param _hash hash of the data signed//Arbitrary length data signed on the behalf of address(this)\n     * @param _signature Signature byte array associated with _data\n     *\n     * @return magicValue either 0x1626ba7e on success or 0xffffffff failure\n     */\n    function isValidSignature(\n        bytes32 _hash, //bytes memory _data,\n        bytes memory _signature\n    )\n        external\n        view\n        returns (bytes4 magicValue);\n}\n",
  "sourcePath": "/Users/frozeman/Sites/_standards/ERC725/implementations/contracts/interfaces/IERC1271.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IERC1271.sol",
    "exportedSymbols": {
      "IERC1271": [
        3229
      ]
    },
    "id": 3230,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3217,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:33"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3218,
          "nodeType": "StructuredDocumentation",
          "src": "61:79:33",
          "text": " @notice ERC-1271: Standard Signature Validation Method for Contracts"
        },
        "fullyImplemented": false,
        "id": 3229,
        "linearizedBaseContracts": [
          3229
        ],
        "name": "IERC1271",
        "nameLocation": "151:8:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 3219,
              "nodeType": "StructuredDocumentation",
              "src": "295:356:33",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param _hash hash of the data signed//Arbitrary length data signed on the behalf of address(this)\n @param _signature Signature byte array associated with _data\n @return magicValue either 0x1626ba7e on success or 0xffffffff failure"
            },
            "functionSelector": "1626ba7e",
            "id": 3228,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "665:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3221,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "699:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "691:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3223,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "749:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "736:23:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3222,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:84:33"
            },
            "returnParameters": {
              "id": 3227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3226,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "820:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "813:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3225,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "812:19:33"
            },
            "scope": 3229,
            "src": "656:176:33",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3230,
        "src": "141:693:33"
      }
    ],
    "src": "36:799:33"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/interfaces/IERC1271.sol",
    "exportedSymbols": {
      "IERC1271": [
        3229
      ]
    },
    "id": 3230,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3217,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:33"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3218,
          "nodeType": "StructuredDocumentation",
          "src": "61:79:33",
          "text": " @notice ERC-1271: Standard Signature Validation Method for Contracts"
        },
        "fullyImplemented": false,
        "id": 3229,
        "linearizedBaseContracts": [
          3229
        ],
        "name": "IERC1271",
        "nameLocation": "151:8:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 3219,
              "nodeType": "StructuredDocumentation",
              "src": "295:356:33",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param _hash hash of the data signed//Arbitrary length data signed on the behalf of address(this)\n @param _signature Signature byte array associated with _data\n @return magicValue either 0x1626ba7e on success or 0xffffffff failure"
            },
            "functionSelector": "1626ba7e",
            "id": 3228,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "665:16:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3221,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "699:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "691:13:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3220,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3223,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "749:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "736:23:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3222,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:5:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:84:33"
            },
            "returnParameters": {
              "id": 3227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3226,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "820:10:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "813:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3225,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "812:19:33"
            },
            "scope": 3229,
            "src": "656:176:33",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3230,
        "src": "141:693:33"
      }
    ],
    "src": "36:799:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-17T18:08:26.803Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isValidSignature(bytes32,bytes)": {
        "details": "Should return whether the signature provided is valid for the provided data",
        "params": {
          "_hash": "hash of the data signed//Arbitrary length data signed on the behalf of address(this)",
          "_signature": "Signature byte array associated with _data"
        },
        "returns": {
          "magicValue": "either 0x1626ba7e on success or 0xffffffff failure"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ERC-1271: Standard Signature Validation Method for Contracts",
    "version": 1
  }
}